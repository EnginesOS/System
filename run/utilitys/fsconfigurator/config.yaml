--- !ruby/object:ManagedUtility
container_name: fsconfigurator
publisher_namespace: EnginesSystem
type_path: fsconfigurator
ctype: utility
persistent: false
conf_self_start: false
timeout: 15
commands:
 setup_engine:
  command: "/home/setup_engine.sh"
  timeout: 60
  requires:
  - :target
  - :fw_user
  - :data_gid
  - :volume
  - :target_container 
 add_volume:
  command: "/home/add_volume.sh _Engines_Template(volume)"
  timeout: 15
  requires:
  - :target
  - :fw_user
  - :data_gid
  - :volume 
  - :target_container 
 remove_volumes:
  command: "/home/remove_container.sh fs"
  timeout: 20
  requires:
  - :target  
 remove_volume:
  command: "/home/remove_container.sh volume _Engines_Template(volume)"
  requires:
  - :target
  - :volume  
 remove_logs:
  command: "/home/remove_container.sh logs"
  requires:
  - :target
 remove_state:
  command: "/home/remove_container.sh state"
  requires:
  - :target
 remove:
  command: "/home/remove_container.sh state logs"
  timeout: 20
  requires:
  - :target
last_error: 
memory: '128'
hostname: 
domain_name: 
host_network: false
soft_service: false
environments:
- !ruby/object:EnvironmentVariable
 name: fw_user
 value: _Engines_Template(fw_user)
 setatrun: false
- !ruby/object:EnvironmentVariable
 name: data_gid
 value: _Engines_Template(data_gid)
 setatrun: false 
image: engines/fsconfigurator:_Engines_System(release)
volumes: 
 state_dir: 
  name: state_dir
  remotepath: "/client/state/"
  localpath: /opt/engines/run/containers/_Engines_Template(target)/run/
  permissions: "rw"
 log_dir:
  name: log_dir
  remotepath: "/client/log/"
  localpath: /var/log/engines/containers/_Engines_Template(target)
  permissions: "rw"
 persistence:
  name: persistence
  remotepath: "/dest/fs/"
  localpath: /var/lib/engines/fs/_Engines_Template(target)/_Engines_Template(volume)
  permissions: rw
volumes_from:
- "_Engines_Template(target_container)"
mapped_ports:
repo: na
last_result: 
setState: nocontainer
nginxored: false
conf_register_site: false
conf_register_dns: false

