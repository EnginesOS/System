#/!bin/bash

. /opt/mpas/etc/scripts.env 

. $Containers_dot_d/NAME/stack.env

case $1 in
	start)
		 $MpasBin/cont_ctl NAME 	start
		ssh_cmd="ssh -i  $NgnixID  rma@nginx.docker sudo sh /home/addsite.sh NAME test $PORT"
		echo running $ssh_cmd

		$ssh_cmd
	;;


	create)


VOL=""

if test -z $Memory
	then
		Memory=64m
	fi

if test -f $Containers_dot_d/NAME/fs.env
	 then
		. $Containers_dot_d/NAME/fs.env
		if test ! -f  $FSVolHome/$VOLDIR
			then
				mkdir -p  $FSVolHome/$VOLDIR
			echo creating $VOLDIR
			else
				using $VOLDIR
			fi

		VOL=" -v $FSVolHome/$VOLDIR:$FSVolHome/$VOLDIR"
	fi


#FIXME use system scripts and not docker direct
 rm $CidDir/ovidentia.cid
 ##FIXME would be nice to have .lastworking here or somewher
 docker stop ovidentia
 docker rm ovidentia

docker_cmd="docker run  --memory=$Memory -h NAME --name NAME --cidfile $CidDir/NAME.cid $VOL -d -e PORT=$PORT -t NAME/deploy "
echo running $docker_cmd
$docker_cmd
sleep 30
#addNagios

ssh_cmd="ssh -i  $NgnixID  rma@nginx.docker sudo sh /home/addsite.sh NAME test $PORT"
echo running $ssh_cmd

$ssh_cmd
;;

stop)
        #need to deregister DNS
	ssh_cmd="ssh -i  $NgnixID  rma@nginx.docker sudo sh /home/rmsite.sh NAME test $PORT"
echo running $ssh_cmd
$ssh_cmd
	$MpasBin/cont_ctl NAME stop
	#RM Nagios

;;

register)
	 ssh_cmd="ssh -i  $NgnixID  rma@nginx.docker sudo sh /home/addsite.sh NAME test $PORT"
echo running $ssh_cmd
$ssh_cmd
;;

destroy)
	ssh_cmd="ssh -i  $NgnixID  rma@nginx.docker sudo sh /home/rmsite.sh NAME test $PORT"
echo running $ssh_cmd
	$MpasBin/cont_ctl NAME destroy
	#RM Nagios
		if test -n NAME
			then
				#must have NAMe field filled in or will rm -rf $Containers_dot_d/
				rm -rf  $Containers_dot_d/NAME
			fi
	$ssh_cmd

;;

esac

